#@begin Linear_OR #@desc Linear OpenRefine Workflow
#@param expression:value.toNumber()
#@param newColumnName:price_imputed
#@param col-name:price
#@param expression:"isBlank(value)"
#@param expression:value.toDate()
#@param col-name:high_price
#@param col-name:created_at
#@param expression:grel:value.toDate("yyyy-MM-dd_HH:mm:ss_'UTC'")
#@param col-name:updated_at
#@param col-name:dish_id
#@in table0
#@out table16
#@begin core/text-transform0#@desc Text transform on cells in column price using expression value.toNumber()
#@param col-name:price
#@param expression:value.toNumber()
#@in table0
#@out table1
#@end core/text-transform0
#@begin core/text-transform1#@desc Text transform on cells in column high_price using expression value.toNumber()
#@param col-name:high_price
#@param expression:value.toNumber()
#@in table1
#@out table2
#@end core/text-transform1
#@begin core/text-transform2#@desc Text transform on cells in column price using expression value.toNumber()
#@param col-name:price
#@param expression:value.toNumber()
#@in table2
#@out table3
#@end core/text-transform2
#@begin core/text-transform3#@desc Text transform on cells in column high_price using expression value.toNumber()
#@param col-name:high_price
#@param expression:value.toNumber()
#@in table3
#@out table4
#@end core/text-transform3
#@begin core/text-transform4#@desc Text transform on cells in column created_at using expression value.toDate()
#@param col-name:created_at
#@param expression:value.toDate()
#@in table4
#@out table5
#@end core/text-transform4
#@begin core/text-transform5#@desc Text transform on cells in column updated_at using expression value.toDate()
#@param col-name:updated_at
#@param expression:value.toDate()
#@in table5
#@out table6
#@end core/text-transform5
#@begin core/text-transform6#@desc Text transform on cells in column created_at using expression grel:value.toDate(\"yyyy-MM-dd HH:mm:ss 'UTC'\")
#@param col-name:created_at
#@param expression:grel:value.toDate("yyyy-MM-dd_HH:mm:ss_'UTC'")
#@in table6
#@out table7
#@end core/text-transform6
#@begin core/text-transform7#@desc Text transform on cells in column updated_at using expression grel:value.toDate(\"yyyy-MM-dd HH:mm:ss 'UTC'\")
#@param col-name:updated_at
#@param expression:grel:value.toDate("yyyy-MM-dd_HH:mm:ss_'UTC'")
#@in table7
#@out table8
#@end core/text-transform7
#@begin core/text-transform8#@desc Text transform on cells in column price using expression value.toNumber()
#@param col-name:price
#@param expression:value.toNumber()
#@in table8
#@out table9
#@end core/text-transform8
#@begin core/text-transform9#@desc Text transform on cells in column high_price using expression value.toNumber()
#@param col-name:high_price
#@param expression:value.toNumber()
#@in table9
#@out table10
#@end core/text-transform9
#@begin core/text-transform10#@desc Text transform on cells in column created_at using expression value.toDate()
#@param col-name:created_at
#@param expression:value.toDate()
#@in table10
#@out table11
#@end core/text-transform10
#@begin core/text-transform11#@desc Text transform on cells in column updated_at using expression value.toDate()
#@param col-name:updated_at
#@param expression:value.toDate()
#@in table11
#@out table12
#@end core/text-transform11
#@begin core/text-transform12#@desc Text transform on cells in column created_at using expression grel:value.toDate(\"yyyy-MM-dd HH:mm:ss 'UTC'\")
#@param col-name:created_at
#@param expression:grel:value.toDate("yyyy-MM-dd_HH:mm:ss_'UTC'")
#@in table12
#@out table13
#@end core/text-transform12
#@begin core/text-transform13#@desc Text transform on cells in column updated_at using expression grel:value.toDate(\"yyyy-MM-dd HH:mm:ss 'UTC'\")
#@param col-name:updated_at
#@param expression:grel:value.toDate("yyyy-MM-dd_HH:mm:ss_'UTC'")
#@in table13
#@out table14
#@end core/text-transform13
#@begin core/row-removal0#@desc Remove rows
#@param col-name:dish_id
#@param expression:"isBlank(value)"
#@in table14
#@out table15
#@end core/row-removal0
#@begin core/column-addition0#@desc Create column price_imputed at index 3 based on column price using expression grel:coalesce(value, cells[\"high_price\"].value)
#@param col-name:price
#@param newColumnName:"price_imputed"
#@in table15
#@out table16
#@end core/column-addition0
#@end Linear_OR
